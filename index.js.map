{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_BASE_URL = 'https://pixabay.com/api/';\n// need to remove it to env variables or secured storage\nexport const API_KEY = '49355059-ef28fa3d6cd8d2c420ac797e4';\n\nexport function fetchSearchData(search_phrase) {\n  const request_options = {\n    key: API_KEY,\n    q: search_phrase,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  };\n  const queryParams = new URLSearchParams(request_options).toString();\n  const request_url = `${API_BASE_URL}?${queryParams}`;\n  return fetch(request_url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    })\n    .then(data => {\n      if (!data.hits || data.hits.length === 0) {\n        throw new Error(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n      }\n      return data.hits;\n    })\n    .catch(error => console.error('Error fetching data:', error));\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\n\nexport function renderImageMarkup(images) {\n  const galleryMarkup = images\n    .map(\n      img => `\n    <li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${img.largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${img.webformatURL}\"\n      data-source=\"${img.largeImageURL}\"\n      alt=\"${img.tags}\"\n    />\n  </a>\n</li>\n  `\n    )\n    .join('');\n\n  gallery.innerHTML = galleryMarkup;\n\n  const gallery_config = {\n    captionsData: 'alt',\n    captionDelay: 250,\n  };\n  new SimpleLightbox('.gallery-link', gallery_config);\n}\n","import { fetchSearchData, API_KEY } from './js/pixabay-api';\nimport { renderImageMarkup } from './js/render-functions';\n\nconst search_form = document.getElementById('search-form');\nsearch_form.addEventListener('submit', search_image);\n\nfunction search_image(event) {\n  event.preventDefault();\n\n  const search_phrase = event.currentTarget.elements.query.value;\n  fetchSearchData(search_phrase).then(data => {\n    console.log(data);\n    renderImageMarkup(data);\n  });\n}\n"],"names":["API_BASE_URL","API_KEY","fetchSearchData","search_phrase","request_options","queryParams","request_url","response","data","error","gallery","renderImageMarkup","images","galleryMarkup","img","gallery_config","SimpleLightbox","search_form","search_image","event"],"mappings":"svBAAA,MAAMA,EAAe,2BAERC,EAAU,qCAEhB,SAASC,EAAgBC,EAAe,CAC7C,MAAMC,EAAkB,CACtB,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACb,EACKE,EAAc,IAAI,gBAAgBD,CAAe,EAAE,SAAU,EAC7DE,EAAc,GAAGN,CAAY,IAAIK,CAAW,GAClD,OAAO,MAAMC,CAAW,EACrB,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,OAAOA,EAAS,KAAM,CACvB,CAAA,EACA,KAAKC,GAAQ,CACZ,GAAI,CAACA,EAAK,MAAQA,EAAK,KAAK,SAAW,EACrC,MAAM,IAAI,MACR,0EACD,EAEH,OAAOA,EAAK,IACb,CAAA,EACA,MAAMC,GAAS,QAAQ,MAAM,uBAAwBA,CAAK,CAAC,CAChE,CC5BA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAE1C,SAASC,EAAkBC,EAAQ,CACxC,MAAMC,EAAgBD,EACnB,IACCE,GAAO;AAAA;AAAA,kCAEqBA,EAAI,aAAa;AAAA;AAAA;AAAA,aAGtCA,EAAI,YAAY;AAAA,qBACRA,EAAI,aAAa;AAAA,aACzBA,EAAI,IAAI;AAAA;AAAA;AAAA;AAAA,GAKrB,EACK,KAAK,EAAE,EAEVJ,EAAQ,UAAYG,EAEpB,MAAME,EAAiB,CACrB,aAAc,MACd,aAAc,GACf,EACD,IAAIC,EAAe,gBAAiBD,CAAc,CACpD,CC3BA,MAAME,EAAc,SAAS,eAAe,aAAa,EACzDA,EAAY,iBAAiB,SAAUC,CAAY,EAEnD,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAgB,EAEtB,MAAMhB,EAAgBgB,EAAM,cAAc,SAAS,MAAM,MACzDjB,EAAgBC,CAAa,EAAE,KAAKK,GAAQ,CAC1C,QAAQ,IAAIA,CAAI,EAChBG,EAAkBH,CAAI,CAC1B,CAAG,CACH"}